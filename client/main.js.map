{"mappings":"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","sources":["./home/livid/github/other/markdown-preview-plus/node_modules/@parcel/scope-hoisting/lib/helpers.js","./lib-client/src-client/main.js","./lib-client/src-client/update-preview.js","./node_modules/morphdom/dist/morphdom-esm.js","./lib-client/src-client/diff.js","./lib-client/src-client/util.js","./lib-client/src-client/mathjax-helper.js","./lib-client/src/util-common.js"],"sourcesContent":[null,"import { ipcRenderer } from 'electron';\nimport { update } from './update-preview';\nimport { MathJaxController, processHTMLString } from './mathjax-helper';\nimport * as util from './util';\nimport { getMedia } from '../src/util-common';\nlet handlerId;\nlet nativePageScrollKeys = false;\nfunction uncaughtError(err) {\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-uncaught-error', handlerId, {\n        message: err.message,\n        name: err.name,\n        stack: err.stack,\n    });\n}\nwindow.addEventListener('error', (e) => {\n    uncaughtError(e.error);\n});\nwindow.addEventListener('unhandledrejection', (evt) => {\n    uncaughtError(evt.reason);\n});\nfunction mkResPromise() {\n    let resFn;\n    const p = new Promise((resolve) => (resFn = resolve));\n    p.resolve = resFn;\n    return p;\n}\nconst atomVars = {\n    mathJax: mkResPromise(),\n    sourceLineMap: new Map(),\n    revSourceMap: new WeakMap(),\n};\nipcRenderer.on('set-id', (_evt, id) => {\n    handlerId = id;\n});\nipcRenderer.on('init', (_evt, params) => {\n    atomVars.mathJax.resolve(MathJaxController.create(params.userMacros, params.mathJaxConfig));\n    document.documentElement.dataset.markdownPreviewPlusContext = params.context;\n    if (params.context === 'pdf-export') {\n        document.documentElement.style.setProperty('width', `${params.pdfExportOptions.width}mm`, 'important');\n    }\n});\nipcRenderer.on('set-native-keys', (_evt, val) => {\n    nativePageScrollKeys = val;\n});\nfunction scrollSync({ firstLine, lastLine }) {\n    if (firstLine === 0) {\n        window.scroll({ top: 0 });\n        return;\n    }\n    const slm = atomVars.sourceLineMap;\n    const lines = Array.from(slm.keys()).sort((a, b) => a - b);\n    let lowix = lines.findIndex((x) => x >= firstLine);\n    if (lowix > 0)\n        lowix--;\n    let highix = lines.findIndex((x) => x >= lastLine);\n    if (highix === -1)\n        highix = lines.length - 1;\n    else if (highix < lines.length - 1)\n        highix++;\n    const low = lines[lowix];\n    const high = lines[highix];\n    let norm = 0;\n    let meanScroll = 0;\n    const entries = Array.from(slm.entries()).slice(lowix, highix + 1);\n    for (const [line, item] of entries) {\n        const weight = line <= (high + low) / 2 ? line - low + 1 : high - line + 1;\n        norm += weight;\n        meanScroll += item.getBoundingClientRect().top * weight;\n    }\n    if (norm === 0)\n        return;\n    const offset = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n    const top = offset - clientHeight / 2 + meanScroll / norm;\n    window.scroll({ top });\n}\nipcRenderer.on('scroll-sync', (_evt, params) => {\n    scrollSync(params);\n});\nipcRenderer.on('style', (_event, { styles }) => {\n    let styleElem = document.head.querySelector('style#atom-styles');\n    if (!styleElem) {\n        styleElem = document.createElement('style');\n        styleElem.id = 'atom-styles';\n        document.head.appendChild(styleElem);\n    }\n    styleElem.innerHTML = styles.join('\\n');\n});\nipcRenderer.on('update-images', (_event, { oldsrc, v }) => {\n    const imgs = getMedia(document);\n    for (const img of Array.from(imgs)) {\n        let ovs;\n        let ov;\n        let attrName;\n        if (img.tagName === 'LINK')\n            attrName = 'href';\n        else\n            attrName = 'src';\n        let src = img.getAttribute(attrName);\n        const match = src.match(/^(.*)\\?v=(\\d+)$/);\n        if (match)\n            [, src, ovs] = match;\n        if (src === oldsrc) {\n            if (ovs !== undefined)\n                ov = parseInt(ovs, 10);\n            if (v !== ov)\n                img[attrName] = v ? `${src}?v=${v}` : `${src}`;\n        }\n    }\n});\nipcRenderer.on('sync', (_event, { line, flash }) => {\n    const root = document.querySelector('div.update-preview');\n    if (!root)\n        return;\n    let element = atomVars.sourceLineMap.get(line);\n    if (!element) {\n        for (let i = line - 1; i >= 0; i -= 1) {\n            element = atomVars.sourceLineMap.get(line);\n            if (element)\n                break;\n        }\n    }\n    if (!element)\n        return;\n    element.scrollIntoViewIfNeeded(true);\n    if (flash) {\n        element.classList.add('flash');\n        setTimeout(() => element.classList.remove('flash'), 1000);\n    }\n});\nlet updatePromise;\nlet nextUpdateParams;\nasync function doUpdate({ id, html, renderLaTeX, map, diffMethod, scrollSyncParams, }) {\n    const preview = document.querySelector('div.update-preview');\n    if (!preview)\n        return;\n    const parser = new DOMParser();\n    const domDocument = parser.parseFromString(html, 'text/html');\n    const doc = document;\n    if (doc && domDocument.head.hasChildNodes) {\n        let container = doc.head.querySelector('original-elements');\n        if (!container) {\n            container = doc.createElement('original-elements');\n            doc.head.appendChild(container);\n        }\n        container.innerHTML = '';\n        for (const headElement of Array.from(domDocument.head.childNodes)) {\n            container.appendChild(headElement);\n        }\n    }\n    const visibleElements = scrollSyncParams\n        ? undefined\n        : Array.from(preview.children)\n            .map((x) => ({ el: x, r: x.getBoundingClientRect() }))\n            .filter(({ r }) => r.top <= window.innerHeight && r.bottom >= 0);\n    await update(preview, domDocument.body, {\n        renderLaTeX,\n        diffMethod,\n        mjController: await atomVars.mathJax,\n    });\n    if (visibleElements) {\n        const stillVisibleElements = visibleElements.filter(({ el }) => el.offsetParent);\n        const lastEl = stillVisibleElements[stillVisibleElements.length - 1];\n        if (lastEl) {\n            window.scrollBy({\n                top: lastEl.el.getBoundingClientRect().bottom - lastEl.r.bottom,\n            });\n        }\n    }\n    if (map) {\n        const slsm = new Map();\n        const rsm = new WeakMap();\n        for (const [lineS, path] of Object.entries(map)) {\n            const line = parseInt(lineS, 10);\n            const elem = util.resolveElement(preview, path);\n            if (elem) {\n                slsm.set(line, elem);\n                const rsmel = rsm.get(elem);\n                if (rsmel)\n                    rsmel.push(line);\n                else\n                    rsm.set(elem, [line]);\n            }\n        }\n        atomVars.sourceLineMap = slsm;\n        atomVars.revSourceMap = rsm;\n    }\n    if (scrollSyncParams)\n        scrollSync(scrollSyncParams);\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-request-reply', handlerId, {\n        id,\n        request: 'update-preview',\n        result: processHTMLString(preview),\n    });\n}\nfunction delayedUpdate() {\n    let res;\n    if (nextUpdateParams)\n        res = doUpdate(nextUpdateParams).then(delayedUpdate);\n    nextUpdateParams = undefined;\n    return res;\n}\nipcRenderer.on('update-preview', (_event, params) => {\n    if (!updatePromise) {\n        updatePromise = doUpdate(params)\n            .then(delayedUpdate)\n            .catch(uncaughtError)\n            .then(() => {\n            updatePromise = undefined;\n        });\n    }\n    else {\n        nextUpdateParams = params;\n    }\n});\nipcRenderer.on('await-fully-ready', async (_event, { id }) => {\n    if (document.readyState === 'complete') {\n        ipcRenderer.send('atom-markdown-preview-plus-ipc-request-reply', handlerId, {\n            id,\n            request: 'await-fully-ready',\n            result: void 0,\n        });\n        return;\n    }\n    function loaded() {\n        ipcRenderer.send('atom-markdown-preview-plus-ipc-request-reply', handlerId, {\n            id,\n            request: 'await-fully-ready',\n            result: void 0,\n        });\n        document.removeEventListener('load', loaded);\n    }\n    document.addEventListener('load', loaded);\n});\nconst baseElement = document.createElement('base');\ndocument.head.appendChild(baseElement);\nipcRenderer.on('set-base-path', (_evt, { path }) => {\n    if (path)\n        baseElement.href = path;\n    else\n        baseElement.href = '';\n});\nipcRenderer.on('error', (_evt, { msg }) => {\n    const preview = document.querySelector('div.update-preview');\n    if (!preview)\n        return;\n    const errorDiv = document.createElement('div');\n    errorDiv.innerHTML = `<h2>Previewing Markdown Failed</h2><h3>${msg}</h3>`;\n    preview.appendChild(errorDiv);\n});\ndocument.addEventListener('wheel', (event) => {\n    if (event.ctrlKey) {\n        if (event.deltaY > 0) {\n            ipcRenderer.send('atom-markdown-preview-plus-ipc-zoom-in', handlerId);\n        }\n        else if (event.deltaY < 0) {\n            ipcRenderer.send('atom-markdown-preview-plus-ipc-zoom-out', handlerId);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n});\ndocument.addEventListener('scroll', (_event) => {\n    const el = document.documentElement;\n    const height = el.clientHeight;\n    const visible = Array.from(atomVars.sourceLineMap.entries())\n        .filter(([_line, elem]) => {\n        const { top, bottom } = elem.getBoundingClientRect();\n        return top > 0 && bottom < height;\n    })\n        .map(([line, _elem]) => line);\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-did-scroll-preview', handlerId, {\n        max: Math.max(...visible),\n        min: Math.min(...visible),\n    });\n});\nfunction keyEventHandler(type, e) {\n    if (nativePageScrollKeys &&\n        !e.altKey &&\n        !e.ctrlKey &&\n        !e.shiftKey &&\n        !e.metaKey &&\n        e.code.match(/^(Arrow.*|Page.*|Space|Home|End)$/)) {\n        return;\n    }\n    const data = {\n        type: type,\n        altKey: e.altKey,\n        ctrlKey: e.ctrlKey,\n        bubbles: e.bubbles,\n        cancelable: e.cancelable,\n        code: e.code,\n        composed: e.composed,\n        detail: e.detail,\n        isComposing: e.isComposing,\n        key: e.key,\n        location: e.location,\n        metaKey: e.metaKey,\n        repeat: e.repeat,\n        shiftKey: e.shiftKey,\n    };\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-key', handlerId, data);\n    e.preventDefault();\n}\ndocument.addEventListener('keydown', keyEventHandler.bind(this, 'keydown'));\ndocument.addEventListener('keyup', keyEventHandler.bind(this, 'keyup'));\nlet lastContextMenuTarget;\ndocument.addEventListener('contextmenu', (e) => {\n    lastContextMenuTarget = e.target;\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-show-context-menu', handlerId);\n});\nipcRenderer.on('sync-source', (_, { id }) => {\n    let element = lastContextMenuTarget;\n    const rsm = atomVars.revSourceMap;\n    let lines = rsm.get(element);\n    while (!lines && element.parentElement) {\n        element = element.parentElement;\n        lines = rsm.get(element);\n    }\n    if (!lines)\n        return;\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-request-reply', handlerId, {\n        id,\n        request: 'sync-source',\n        result: Math.min(...lines),\n    });\n});\nipcRenderer.on('reload', (_, { id }) => {\n    window.onbeforeunload = null;\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-request-reply', handlerId, {\n        id,\n        request: 'reload',\n        result: undefined,\n    });\n});\nwindow.onbeforeunload = function () {\n    return false;\n};\nipcRenderer.on('get-tex-config', async (_, { id }) => {\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-request-reply', handlerId, {\n        id,\n        request: 'get-tex-config',\n        result: (await atomVars.mathJax).jaxTeXConfig(),\n    });\n});\nipcRenderer.on('get-selection', async (_, { id }) => {\n    const selection = window.getSelection();\n    const selectedText = selection && selection.toString();\n    const selectedNode = selection && selection.anchorNode;\n    ipcRenderer.send('atom-markdown-preview-plus-ipc-request-reply', handlerId, {\n        id,\n        request: 'get-selection',\n        result: selectedText && selectedNode ? selectedText : undefined,\n    });\n});\ndocument.addEventListener('click', (event) => {\n    if (!event.target)\n        return;\n    const el = event.target;\n    if (el.tagName === 'A') {\n        const href = el.getAttribute('href');\n        if (href && href.startsWith('#')) {\n            event.preventDefault();\n            const anchor = document.getElementById(decodeURIComponent(href).slice(1));\n            if (anchor)\n                anchor.scrollIntoView();\n        }\n    }\n});\n//# sourceMappingURL=data:application/json;base64,","import morph from 'morphdom';\nimport { diff } from './diff';\nfunction isEqualMath(a, b) {\n    const tcs = getMathContents(a, b);\n    return tcs && tcs[0].textContent === tcs[1].textContent;\n}\nfunction getMathContents(a, b) {\n    if (!isElement(a) || !isElement(b))\n        return false;\n    if (a.tagName !== 'SPAN' ||\n        b.tagName !== 'SPAN' ||\n        !a.classList.contains('math') ||\n        !b.classList.contains('math')) {\n        return false;\n    }\n    const ascr = a.querySelector(':scope > script');\n    if (!ascr)\n        return false;\n    const bscr = b.querySelector(':scope > script');\n    if (!bscr)\n        return false;\n    if (ascr.type !== bscr.type)\n        return false;\n    return [ascr, bscr];\n}\nfunction isElement(a) {\n    return a.nodeType === Node.ELEMENT_NODE;\n}\nfunction checkDocumentType(a, b) {\n    return (a.name === b.name && a.publicId === b.publicId && a.systemId === b.systemId);\n}\nfunction checkElement(a, b) {\n    if (a.attributes.length !== b.attributes.length)\n        return false;\n    return Array.from(a.attributes).every((x) => x.isEqualNode(b.attributes.getNamedItemNS(x.namespaceURI, x.localName)));\n}\nfunction checkAttr(a, b) {\n    return (a.namespaceURI === b.namespaceURI &&\n        a.localName === b.localName &&\n        a.value === b.value);\n}\nfunction checkProcInstr(a, b) {\n    return a.target === b.target && a.data === b.data;\n}\nfunction checkData(a, b) {\n    return a.data === b.data;\n}\nfunction isEqual(a, b) {\n    if (a.isEqualNode(b))\n        return true;\n    if (isEqualMath(a, b))\n        return true;\n    if (a.nodeType !== b.nodeType)\n        return false;\n    if (a.childNodes.length !== b.childNodes.length)\n        return false;\n    let ac = a.firstChild;\n    let bc = b.firstChild;\n    while (ac && bc) {\n        if (!isEqual(ac, bc))\n            return false;\n        ac = ac.nextSibling;\n        bc = bc.nextSibling;\n    }\n    switch (a.nodeType) {\n        case Node.DOCUMENT_TYPE_NODE:\n            return checkDocumentType(a, b);\n        case Node.ELEMENT_NODE:\n            return checkElement(a, b);\n        case Node.ATTRIBUTE_NODE:\n            return checkAttr(a, b);\n        case Node.PROCESSING_INSTRUCTION_NODE:\n            return checkProcInstr(a, b);\n        case Node.TEXT_NODE:\n        case Node.COMMENT_NODE:\n            return checkData(a, b);\n        default:\n            return true;\n    }\n}\nfunction* allChildren(node) {\n    for (const c of node.children) {\n        if (c.tagName === 'SPAN' && c.classList.contains('MathJax'))\n            continue;\n        if (c.tagName === 'SPAN' && c.classList.contains('MathJax_SVG'))\n            continue;\n        if (c.tagName === 'SCRIPT')\n            continue;\n        if (c.tagName === 'DIV' && c.classList.contains('MathJax_Display'))\n            continue;\n        if (c.tagName === 'DIV' && c.classList.contains('MathJax_SVG_Display')) {\n            continue;\n        }\n        yield c;\n        yield* allChildren(c);\n    }\n}\nfunction runHeuristic(idMap, newDom, oldDom) {\n    let idx = 0;\n    function matchEls(newRoot, oldRoot) {\n        let newEl = newRoot.firstChild;\n        let oldEl = oldRoot.firstChild;\n        const newCount = newRoot.childNodes.length;\n        const oldCount = oldRoot.childNodes.length;\n        if (newCount > oldCount) {\n            while (oldEl && newEl) {\n                if (isEqual(newEl, oldEl)) {\n                    if (newEl.nodeType === Node.ELEMENT_NODE) {\n                        const sidx = idx.toString(36);\n                        idMap.set(oldEl, sidx);\n                        idMap.set(newEl, sidx);\n                        idx++;\n                    }\n                    matchEls(newEl, oldEl);\n                    oldEl = oldEl.nextSibling;\n                }\n                newEl = newEl.nextSibling;\n            }\n        }\n        else if (newCount < oldCount) {\n            while (oldEl && newEl) {\n                if (isEqual(newEl, oldEl)) {\n                    if (newEl.nodeType === Node.ELEMENT_NODE) {\n                        const sidx = idx.toString(36);\n                        idMap.set(oldEl, sidx);\n                        idMap.set(newEl, sidx);\n                        idx++;\n                    }\n                    matchEls(newEl, oldEl);\n                    newEl = newEl.nextSibling;\n                }\n                oldEl = oldEl.nextSibling;\n            }\n        }\n    }\n    matchEls(newDom, oldDom);\n}\nfunction time(cb) {\n    const start = performance.now();\n    const res = cb();\n    console.log(cb.toString(), performance.now() - start, 'ms');\n    return res;\n}\nexport async function update(oldDom, newDom, opts) {\n    const idMap = new WeakMap();\n    switch (opts.diffMethod) {\n        case 'heuristic': {\n            time(() => runHeuristic(idMap, newDom, oldDom));\n            break;\n        }\n        case 'myers': {\n            const a = time(() => Array.from(allChildren(oldDom)));\n            const b = time(() => Array.from(allChildren(newDom)));\n            let ncomp = 0;\n            let idx = 0;\n            time(() => diff(a, b, (a, b) => {\n                ncomp++;\n                return isEqual(a, b);\n            }, (pairs) => {\n                for (const [x, y] of pairs) {\n                    const sidx = idx.toString(36);\n                    idMap.set(x, sidx);\n                    idMap.set(y, sidx);\n                    idx++;\n                }\n            }));\n            console.log('a:', a.length, 'b:', b.length, 'comp:', ncomp);\n            break;\n        }\n        case 'none':\n            break;\n    }\n    try {\n        morph(oldDom, newDom, {\n            childrenOnly: true,\n            onBeforeElUpdated(fromEl, toEl) {\n                if (fromEl.isEqualNode(toEl))\n                    return false;\n                const tcs = getMathContents(fromEl, toEl);\n                if (tcs) {\n                    if (tcs[0].textContent !== tcs[1].textContent) {\n                        tcs[0].textContent = tcs[1].textContent;\n                    }\n                    return false;\n                }\n                return true;\n            },\n            getNodeKey(node) {\n                return idMap.get(node) || '';\n            },\n        });\n    }\n    catch (e) {\n        console.error(e);\n        oldDom.innerHTML = newDom.innerHTML;\n    }\n    if (opts.renderLaTeX)\n        await opts.mjController.queueTypeset(oldDom);\n}\n//# sourceMappingURL=data:application/json;base64,","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","import { zip } from './util';\nexport function diff(left, right, compare, match) {\n    const slices = [];\n    function go(e, f, i = 0, j = 0) {\n        const [N, M, L, Z] = [\n            e.length,\n            f.length,\n            e.length + f.length,\n            2 * Math.min(e.length, f.length) + 2,\n        ];\n        if (N > 0 && M > 0) {\n            const [w, g, p] = [\n                N - M,\n                Array(Z).fill(0),\n                Array(Z).fill(0),\n            ];\n            for (let h = 0; h < L / 2 + (L % 2) + 1; h++) {\n                for (let r = 0; r < 2; r++) {\n                    const [c, d, o, m] = r === 0 ? [g, p, 1, 1] : [p, g, 0, -1];\n                    for (let k = -(h - 2 * Math.max(0, h - M)); k < h - 2 * Math.max(0, h - N) + 1; k += 2) {\n                        let a = k === -h || (k !== h && c[(k - 1) % Z] < c[(k + 1) % Z])\n                            ? c[(k + 1) % Z]\n                            : c[(k - 1) % Z] + 1;\n                        let b = a - k;\n                        const [s, t] = [a, b];\n                        while (a < N &&\n                            b < M &&\n                            compare(e[(1 - o) * N + m * a + (o - 1)], f[(1 - o) * M + m * b + (o - 1)])) {\n                            a++, b++;\n                        }\n                        c[k % Z] = a;\n                        const z = -(k - w);\n                        if (L % 2 === o &&\n                            z >= -(h - o) &&\n                            z <= h - o &&\n                            c[k % Z] + d[z % Z] >= N) {\n                            const [D, x, y, u, v] = o === 1\n                                ? [2 * h - 1, s, t, a, b]\n                                : [2 * h, N - a, M - b, N - s, M - t];\n                            if (D > 1 || (x !== u && y !== v)) {\n                                if (x !== u && y !== v) {\n                                    slices.push([e.slice(x, u), f.slice(y, v)]);\n                                }\n                                go(e.slice(0, x), f.slice(0, y), i, j);\n                                go(e.slice(u, N), f.slice(v, M), i + u, j + v);\n                                return;\n                            }\n                            else if (M > N) {\n                                slices.push([e.slice(0, N), f.slice(0, N)]);\n                                return;\n                            }\n                            else if (M < N) {\n                                slices.push([e.slice(0, M), f.slice(0, M)]);\n                                return;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    go(Array.from(left), Array.from(right));\n    match(slicesToItems(slices));\n}\nfunction* slicesToItems(slices) {\n    for (const [a, b] of slices) {\n        yield* zip(a, b);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","export function handlePromise(promise) {\n    if (!promise)\n        return;\n    promise.catch((error) => {\n        console.error(error);\n    });\n}\nimport { lstatSync, existsSync } from 'fs';\nexport function isFileSync(filePath) {\n    if (!existsSync(filePath))\n        return false;\n    return lstatSync(filePath).isFile();\n}\nexport function resolveElement(root, pathToToken) {\n    let element = root;\n    for (const token of pathToToken) {\n        const candidateElement = element\n            .querySelectorAll(`:scope > ${token.tag}`)\n            .item(token.index);\n        if (candidateElement) {\n            element = candidateElement;\n        }\n        else {\n            break;\n        }\n    }\n    if (element === root)\n        return undefined;\n    return element;\n}\nexport function* zip(a, b) {\n    const ita = a[Symbol.iterator]();\n    const itb = b[Symbol.iterator]();\n    let x = ita.next();\n    let y = itb.next();\n    while (!x.done && !y.done) {\n        yield [x.value, y.value];\n        x = ita.next();\n        y = itb.next();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy1jbGllbnQvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsYUFBYSxDQUFDLE9BQXFCO0lBQ2pELElBQUksQ0FBQyxPQUFPO1FBQUUsT0FBTTtJQUNwQixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUU7UUFDN0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUN0QixDQUFDLENBQUMsQ0FBQTtBQUNKLENBQUM7QUFDRCxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLElBQUksQ0FBQTtBQUMxQyxNQUFNLFVBQVUsVUFBVSxDQUFDLFFBQWdCO0lBQ3pDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO1FBQUUsT0FBTyxLQUFLLENBQUE7SUFDdkMsT0FBTyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUE7QUFDckMsQ0FBQztBQUVELE1BQU0sVUFBVSxjQUFjLENBQzVCLElBQWEsRUFDYixXQUFrRDtJQUVsRCxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUE7SUFDbEIsS0FBSyxNQUFNLEtBQUssSUFBSSxXQUFXLEVBQUU7UUFDL0IsTUFBTSxnQkFBZ0IsR0FBdUIsT0FBTzthQUNqRCxnQkFBZ0IsQ0FBQyxZQUFZLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQzthQUN6QyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBZ0IsQ0FBQTtRQUNuQyxJQUFJLGdCQUFnQixFQUFFO1lBQ3BCLE9BQU8sR0FBRyxnQkFBZ0IsQ0FBQTtTQUMzQjthQUFNO1lBQ0wsTUFBSztTQUNOO0tBQ0Y7SUFFRCxJQUFJLE9BQU8sS0FBSyxJQUFJO1FBQUUsT0FBTyxTQUFTLENBQUE7SUFDdEMsT0FBTyxPQUFPLENBQUE7QUFDaEIsQ0FBQztBQUVELE1BQU0sU0FBUyxDQUFDLENBQUMsR0FBRyxDQUNsQixDQUFjLEVBQ2QsQ0FBYztJQUVkLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQTtJQUNoQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUE7SUFDaEMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFBO0lBQ2xCLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtJQUNsQixPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUU7UUFDekIsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ3hCLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUE7UUFDZCxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFBO0tBQ2Y7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVByb21pc2UocHJvbWlzZTogUHJvbWlzZTxhbnk+KTogdm9pZCB7XG4gIGlmICghcHJvbWlzZSkgcmV0dXJuXG4gIHByb21pc2UuY2F0Y2goKGVycm9yOiBFcnJvcikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpXG4gIH0pXG59XG5pbXBvcnQgeyBsc3RhdFN5bmMsIGV4aXN0c1N5bmMgfSBmcm9tICdmcydcbmV4cG9ydCBmdW5jdGlvbiBpc0ZpbGVTeW5jKGZpbGVQYXRoOiBzdHJpbmcpIHtcbiAgaWYgKCFleGlzdHNTeW5jKGZpbGVQYXRoKSkgcmV0dXJuIGZhbHNlXG4gIHJldHVybiBsc3RhdFN5bmMoZmlsZVBhdGgpLmlzRmlsZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlRWxlbWVudChcbiAgcm9vdDogRWxlbWVudCxcbiAgcGF0aFRvVG9rZW46IEFycmF5PHsgdGFnOiBzdHJpbmc7IGluZGV4OiBudW1iZXIgfT4sXG4pOiBFbGVtZW50IHwgdW5kZWZpbmVkIHtcbiAgbGV0IGVsZW1lbnQgPSByb290XG4gIGZvciAoY29uc3QgdG9rZW4gb2YgcGF0aFRvVG9rZW4pIHtcbiAgICBjb25zdCBjYW5kaWRhdGVFbGVtZW50OiBIVE1MRWxlbWVudCB8IG51bGwgPSBlbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvckFsbChgOnNjb3BlID4gJHt0b2tlbi50YWd9YClcbiAgICAgIC5pdGVtKHRva2VuLmluZGV4KSBhcyBIVE1MRWxlbWVudFxuICAgIGlmIChjYW5kaWRhdGVFbGVtZW50KSB7XG4gICAgICBlbGVtZW50ID0gY2FuZGlkYXRlRWxlbWVudFxuICAgIH0gZWxzZSB7XG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIGlmIChlbGVtZW50ID09PSByb290KSByZXR1cm4gdW5kZWZpbmVkIC8vIERvIG5vdCBqdW1wIHRvIHRoZSB0b3Agb2YgdGhlIHByZXZpZXcgZm9yIGJhZCBzeW5jc1xuICByZXR1cm4gZWxlbWVudFxufVxuXG5leHBvcnQgZnVuY3Rpb24qIHppcDxVLCBWPihcbiAgYTogSXRlcmFibGU8VT4sXG4gIGI6IEl0ZXJhYmxlPFY+LFxuKTogSXRlcmFibGVJdGVyYXRvcjxbVSwgVl0+IHtcbiAgY29uc3QgaXRhID0gYVtTeW1ib2wuaXRlcmF0b3JdKClcbiAgY29uc3QgaXRiID0gYltTeW1ib2wuaXRlcmF0b3JdKClcbiAgbGV0IHggPSBpdGEubmV4dCgpXG4gIGxldCB5ID0gaXRiLm5leHQoKVxuICB3aGlsZSAoIXguZG9uZSAmJiAheS5kb25lKSB7XG4gICAgeWllbGQgW3gudmFsdWUsIHkudmFsdWVdXG4gICAgeCA9IGl0YS5uZXh0KClcbiAgICB5ID0gaXRiLm5leHQoKVxuICB9XG59XG4iXX0=","export function processHTMLString(element) {\n    const msvgh = document.getElementById('MathJax_SVG_Hidden');\n    const svgGlyphs = msvgh && msvgh.parentElement;\n    if (svgGlyphs !== null) {\n        return svgGlyphs.outerHTML + element.innerHTML;\n    }\n    else {\n        return element.innerHTML;\n    }\n}\nexport class MathJaxController {\n    constructor(userMacros, mathJaxConfig) {\n        this.userMacros = userMacros;\n        this.mathJaxConfig = mathJaxConfig;\n        this.readyPromise = this.attachMathJax();\n    }\n    static async create(userMacros, mathJaxConfig) {\n        const controller = new MathJaxController(userMacros, mathJaxConfig);\n        await controller.readyPromise;\n        return controller;\n    }\n    dispose() {\n        const script = document.head.querySelector(`script[src='${MathJaxController.mjSrc}']`);\n        if (script)\n            script.remove();\n    }\n    jaxTeXConfig() {\n        return {\n            extensions: this.mathJaxConfig.texExtensions,\n            Macros: this.userMacros,\n            equationNumbers: this.mathJaxConfig.numberEquations\n                ? {\n                    autoNumber: 'AMS',\n                    useLabelIds: false,\n                }\n                : {},\n        };\n    }\n    async queueTypeset(domElement) {\n        const allMath = Array.from(domElement.querySelectorAll('span.math > script[type^=\"math/tex\"]'));\n        const unprocessedMath = allMath.filter((x) => {\n            const jax = MathJax.Hub.getJaxFor(x);\n            return !jax || jax.needsUpdate();\n        });\n        if (unprocessedMath.length === 0)\n            return;\n        return new Promise((resolve) => {\n            if (MathJax.InputJax.TeX) {\n                MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX]);\n            }\n            if (this.mathJaxConfig.numberEquations) {\n                const { temps, spans } = this.setupTemps(allMath);\n                MathJax.Hub.Queue(['PreProcess', MathJax.Hub, temps]);\n                MathJax.Hub.Queue(['Reprocess', MathJax.Hub, temps]);\n                MathJax.Hub.Queue(() => this.cleanupTemps(temps, spans));\n            }\n            else {\n                const { temps, spans } = this.setupTemps(unprocessedMath);\n                MathJax.Hub.Queue(['Update', MathJax.Hub, temps]);\n                MathJax.Hub.Queue(() => this.cleanupTemps(temps, spans));\n            }\n            MathJax.Hub.Queue([resolve]);\n        });\n    }\n    cleanupTemps(temps, spans) {\n        for (const span of spans)\n            span.remove();\n        for (const temp of temps) {\n            temp.style.visibility = '';\n            temp.style.position = '';\n            temp.style.width = '';\n            temp.style.display = '';\n            temp.classList.remove('temp-MathJax');\n        }\n    }\n    setupTemps(scriptElements) {\n        const temps = [];\n        const spans = [];\n        for (const script of scriptElements) {\n            const span = script.parentElement;\n            if (!span)\n                continue;\n            const par = span.parentElement;\n            if (!par)\n                continue;\n            const disp = script.previousElementSibling;\n            if (disp) {\n                const temp = span.cloneNode(false);\n                temp.classList.add('temp-MathJax');\n                temp.appendChild(script.cloneNode(true));\n                temps.push(temp);\n                spans.push(span);\n                par.insertBefore(temp, span);\n                temp.style.visibility = 'hidden';\n                temp.style.position = 'absolute';\n                if (script.type.includes('display')) {\n                    temp.style.width = window.getComputedStyle(disp).width;\n                    temp.style.display = 'block';\n                }\n            }\n            else {\n                temps.push(span);\n            }\n        }\n        return { temps, spans };\n    }\n    async attachMathJax() {\n        await injectScript(MathJaxController.mjSrc);\n        MathJax.Hub.Config({\n            jax: ['input/TeX', `output/${this.mathJaxConfig.latexRenderer}`],\n            extensions: [],\n            TeX: this.jaxTeXConfig(),\n            'HTML-CSS': {\n                availableFonts: [],\n                webFont: 'TeX',\n                imageFont: null,\n                undefinedFamily: this.mathJaxConfig.undefinedFamily,\n                mtextFontInherit: true,\n            },\n            messageStyle: 'none',\n            showMathMenu: false,\n            skipStartupTypeset: true,\n        });\n        MathJax.Hub.Configured();\n    }\n}\nMathJaxController.mjSrc = `${global.require.resolve('mathjax')}?delayStartupUntil=configured`;\nasync function injectScript(scriptSrc) {\n    const script = document.createElement('script');\n    script.src = scriptSrc;\n    script.type = 'text/javascript';\n    document.head.appendChild(script);\n    return new Promise((resolve) => {\n        script.addEventListener('load', () => resolve());\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0aGpheC1oZWxwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMtY2xpZW50L21hdGhqYXgtaGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxPQUFnQjtJQUNoRCxNQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUE7SUFDM0QsTUFBTSxTQUFTLEdBQUcsS0FBSyxJQUFJLEtBQUssQ0FBQyxhQUFhLENBQUE7SUFDOUMsSUFBSSxTQUFTLEtBQUssSUFBSSxFQUFFO1FBQ3RCLE9BQU8sU0FBUyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFBO0tBQy9DO1NBQU07UUFDTCxPQUFPLE9BQU8sQ0FBQyxTQUFTLENBQUE7S0FDekI7QUFDSCxDQUFDO0FBRUQsTUFBTSxPQUFPLGlCQUFpQjtJQU01QixZQUNVLFVBQWtCLEVBQ2xCLGFBQTRCO1FBRDVCLGVBQVUsR0FBVixVQUFVLENBQVE7UUFDbEIsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFFcEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUE7SUFDMUMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQWtCLEVBQUUsYUFBNEI7UUFDekUsTUFBTSxVQUFVLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLENBQUE7UUFDbkUsTUFBTSxVQUFVLENBQUMsWUFBWSxDQUFBO1FBQzdCLE9BQU8sVUFBVSxDQUFBO0lBQ25CLENBQUM7SUFHTSxPQUFPO1FBQ1osTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLElBQUssQ0FBQyxhQUFhLENBQ3pDLGVBQWUsaUJBQWlCLENBQUMsS0FBSyxJQUFJLENBQzNDLENBQUE7UUFDRCxJQUFJLE1BQU07WUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUE7SUFD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aUlsQyxLQUFLLFVBQVUsWUFBWSxDQUFDLFNBQWlCO0lBQzNDLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUE7SUFDL0MsTUFBTSxDQUFDLEdBQUcsR0FBRyxTQUFTLENBQUE7SUFDdEIsTUFBTSxDQUFDLElBQUksR0FBRyxpQkFBaUIsQ0FBQTtJQUMvQixRQUFRLENBQUMsSUFBSyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNsQyxPQUFPLElBQUksT0FBTyxDQUFPLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDbkMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFBO0lBQ2xELENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vXG4vLyBtYXRoamF4LWhlbHBlclxuLy9cbi8vIFRoaXMgbW9kdWxlIHdpbGwgaGFuZGxlIGxvYWRpbmcgdGhlIE1hdGhKYXggZW52aXJvbm1lbnQgYW5kIHByb3ZpZGUgYSB3cmFwcGVyXG4vLyBmb3IgY2FsbHMgdG8gTWF0aEpheCB0byBwcm9jZXNzIExhVGVYIGVxdWF0aW9ucy5cbi8vXG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzSFRNTFN0cmluZyhlbGVtZW50OiBFbGVtZW50KSB7XG4gIGNvbnN0IG1zdmdoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ01hdGhKYXhfU1ZHX0hpZGRlbicpXG4gIGNvbnN0IHN2Z0dseXBocyA9IG1zdmdoICYmIG1zdmdoLnBhcmVudEVsZW1lbnRcbiAgaWYgKHN2Z0dseXBocyAhPT0gbnVsbCkge1xuICAgIHJldHVybiBzdmdHbHlwaHMub3V0ZXJIVE1MICsgZWxlbWVudC5pbm5lckhUTUxcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZWxlbWVudC5pbm5lckhUTUxcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTWF0aEpheENvbnRyb2xsZXIge1xuICBwcml2YXRlIHN0YXRpYyBtalNyYyA9IGAke2dsb2JhbC5yZXF1aXJlLnJlc29sdmUoXG4gICAgJ21hdGhqYXgnLFxuICApfT9kZWxheVN0YXJ0dXBVbnRpbD1jb25maWd1cmVkYFxuICBwcml2YXRlIHJlYWRvbmx5IHJlYWR5UHJvbWlzZTogUHJvbWlzZTx2b2lkPlxuXG4gIHByaXZhdGUgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB1c2VyTWFjcm9zOiBvYmplY3QsXG4gICAgcHJpdmF0ZSBtYXRoSmF4Q29uZmlnOiBNYXRoSmF4Q29uZmlnLFxuICApIHtcbiAgICB0aGlzLnJlYWR5UHJvbWlzZSA9IHRoaXMuYXR0YWNoTWF0aEpheCgpXG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGFzeW5jIGNyZWF0ZSh1c2VyTWFjcm9zOiBvYmplY3QsIG1hdGhKYXhDb25maWc6IE1hdGhKYXhDb25maWcpIHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IE1hdGhKYXhDb250cm9sbGVyKHVzZXJNYWNyb3MsIG1hdGhKYXhDb25maWcpXG4gICAgYXdhaXQgY29udHJvbGxlci5yZWFkeVByb21pc2VcbiAgICByZXR1cm4gY29udHJvbGxlclxuICB9XG5cbiAgLy8gZm9yIHRlc3RpbmdcbiAgcHVibGljIGRpc3Bvc2UoKTogdm9pZCB7XG4gICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuaGVhZCEucXVlcnlTZWxlY3RvcihcbiAgICAgIGBzY3JpcHRbc3JjPScke01hdGhKYXhDb250cm9sbGVyLm1qU3JjfSddYCxcbiAgICApXG4gICAgaWYgKHNjcmlwdCkgc2NyaXB0LnJlbW92ZSgpXG4gIH1cblxuICBwdWJsaWMgamF4VGVYQ29uZmlnKCkge1xuICAgIHJldHVybiB7XG4gICAgICBleHRlbnNpb25zOiB0aGlzLm1hdGhKYXhDb25maWcudGV4RXh0ZW5zaW9ucyxcbiAgICAgIE1hY3JvczogdGhpcy51c2VyTWFjcm9zLFxuICAgICAgZXF1YXRpb25OdW1iZXJzOiB0aGlzLm1hdGhKYXhDb25maWcubnVtYmVyRXF1YXRpb25zXG4gICAgICAgID8ge1xuICAgICAgICAgICAgYXV0b051bWJlcjogJ0FNUycsXG4gICAgICAgICAgICB1c2VMYWJlbElkczogZmFsc2UsXG4gICAgICAgICAgfVxuICAgICAgICA6IHt9LFxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBhc3luYyBxdWV1ZVR5cGVzZXQoZG9tRWxlbWVudDogRWxlbWVudCkge1xuICAgIGNvbnN0IGFsbE1hdGggPSBBcnJheS5mcm9tKFxuICAgICAgZG9tRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzcGFuLm1hdGggPiBzY3JpcHRbdHlwZV49XCJtYXRoL3RleFwiXScpLFxuICAgIClcbiAgICBjb25zdCB1bnByb2Nlc3NlZE1hdGggPSBhbGxNYXRoLmZpbHRlcigoeCkgPT4ge1xuICAgICAgY29uc3QgamF4ID0gTWF0aEpheC5IdWIuZ2V0SmF4Rm9yKHgpIGFzIE1hdGhKYXguRWxlbWVudEpheCB8IG51bGxcbiAgICAgIHJldHVybiAhamF4IHx8IGpheC5uZWVkc1VwZGF0ZSgpXG4gICAgfSlcbiAgICBpZiAodW5wcm9jZXNzZWRNYXRoLmxlbmd0aCA9PT0gMCkgcmV0dXJuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlKSA9PiB7XG4gICAgICBpZiAoTWF0aEpheC5JbnB1dEpheC5UZVgpIHtcbiAgICAgICAgTWF0aEpheC5IdWIuUXVldWUoWydyZXNldEVxdWF0aW9uTnVtYmVycycsIE1hdGhKYXguSW5wdXRKYXguVGVYXSlcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLm1hdGhKYXhDb25maWcubnVtYmVyRXF1YXRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgdGVtcHMsIHNwYW5zIH0gPSB0aGlzLnNldHVwVGVtcHMoYWxsTWF0aClcbiAgICAgICAgTWF0aEpheC5IdWIuUXVldWUoWydQcmVQcm9jZXNzJywgTWF0aEpheC5IdWIsIHRlbXBzXSlcbiAgICAgICAgTWF0aEpheC5IdWIuUXVldWUoWydSZXByb2Nlc3MnLCBNYXRoSmF4Lkh1YiwgdGVtcHNdKVxuICAgICAgICBNYXRoSmF4Lkh1Yi5RdWV1ZSgoKSA9PiB0aGlzLmNsZWFudXBUZW1wcyh0ZW1wcywgc3BhbnMpKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgeyB0ZW1wcywgc3BhbnMgfSA9IHRoaXMuc2V0dXBUZW1wcyh1bnByb2Nlc3NlZE1hdGgpXG4gICAgICAgIE1hdGhKYXguSHViLlF1ZXVlKFsnVXBkYXRlJywgTWF0aEpheC5IdWIsIHRlbXBzXSlcbiAgICAgICAgTWF0aEpheC5IdWIuUXVldWUoKCkgPT4gdGhpcy5jbGVhbnVwVGVtcHModGVtcHMsIHNwYW5zKSlcbiAgICAgIH1cbiAgICAgIE1hdGhKYXguSHViLlF1ZXVlKFtyZXNvbHZlXSlcbiAgICB9KVxuICB9XG5cbiAgcHJpdmF0ZSBjbGVhbnVwVGVtcHModGVtcHM6IEhUTUxFbGVtZW50W10sIHNwYW5zOiBIVE1MRWxlbWVudFtdKSB7XG4gICAgZm9yIChjb25zdCBzcGFuIG9mIHNwYW5zKSBzcGFuLnJlbW92ZSgpXG4gICAgZm9yIChjb25zdCB0ZW1wIG9mIHRlbXBzKSB7XG4gICAgICB0ZW1wLnN0eWxlLnZpc2liaWxpdHkgPSAnJ1xuICAgICAgdGVtcC5zdHlsZS5wb3NpdGlvbiA9ICcnXG4gICAgICB0ZW1wLnN0eWxlLndpZHRoID0gJydcbiAgICAgIHRlbXAuc3R5bGUuZGlzcGxheSA9ICcnXG4gICAgICB0ZW1wLmNsYXNzTGlzdC5yZW1vdmUoJ3RlbXAtTWF0aEpheCcpXG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzZXR1cFRlbXBzKHNjcmlwdEVsZW1lbnRzOiBFbGVtZW50W10pIHtcbiAgICBjb25zdCB0ZW1wczogSFRNTEVsZW1lbnRbXSA9IFtdXG4gICAgY29uc3Qgc3BhbnM6IEhUTUxFbGVtZW50W10gPSBbXVxuICAgIGZvciAoY29uc3Qgc2NyaXB0IG9mIHNjcmlwdEVsZW1lbnRzKSB7XG4gICAgICBjb25zdCBzcGFuID0gc2NyaXB0LnBhcmVudEVsZW1lbnRcbiAgICAgIGlmICghc3BhbikgY29udGludWVcbiAgICAgIGNvbnN0IHBhciA9IHNwYW4ucGFyZW50RWxlbWVudFxuICAgICAgaWYgKCFwYXIpIGNvbnRpbnVlXG4gICAgICBjb25zdCBkaXNwID0gc2NyaXB0LnByZXZpb3VzRWxlbWVudFNpYmxpbmdcbiAgICAgIGlmIChkaXNwKSB7XG4gICAgICAgIC8vIHVwZGF0ZSByZW5kZXJcbiAgICAgICAgY29uc3QgdGVtcCA9IHNwYW4uY2xvbmVOb2RlKGZhbHNlKSBhcyBIVE1MU3BhbkVsZW1lbnRcbiAgICAgICAgdGVtcC5jbGFzc0xpc3QuYWRkKCd0ZW1wLU1hdGhKYXgnKVxuICAgICAgICB0ZW1wLmFwcGVuZENoaWxkKHNjcmlwdC5jbG9uZU5vZGUodHJ1ZSkpXG4gICAgICAgIHRlbXBzLnB1c2godGVtcClcbiAgICAgICAgc3BhbnMucHVzaChzcGFuKVxuICAgICAgICBwYXIuaW5zZXJ0QmVmb3JlKHRlbXAsIHNwYW4pXG4gICAgICAgIHRlbXAuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nXG4gICAgICAgIHRlbXAuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnXG4gICAgICAgIGlmICgoc2NyaXB0IGFzIEhUTUxTY3JpcHRFbGVtZW50KS50eXBlLmluY2x1ZGVzKCdkaXNwbGF5JykpIHtcbiAgICAgICAgICB0ZW1wLnN0eWxlLndpZHRoID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZGlzcCkud2lkdGhcbiAgICAgICAgICB0ZW1wLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGluaXRpYWwgcmVuZGVyXG4gICAgICAgIHRlbXBzLnB1c2goc3BhbilcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHsgdGVtcHMsIHNwYW5zIH1cbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgYXR0YWNoTWF0aEpheCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAvLyBBdHRhY2ggTWF0aEpheCBzY3JpcHRcbiAgICBhd2FpdCBpbmplY3RTY3JpcHQoTWF0aEpheENvbnRyb2xsZXIubWpTcmMpXG5cbiAgICBNYXRoSmF4Lkh1Yi5Db25maWcoe1xuICAgICAgamF4OiBbJ2lucHV0L1RlWCcsIGBvdXRwdXQvJHt0aGlzLm1hdGhKYXhDb25maWcubGF0ZXhSZW5kZXJlcn1gXSxcbiAgICAgIGV4dGVuc2lvbnM6IFtdLFxuICAgICAgVGVYOiB0aGlzLmpheFRlWENvbmZpZygpLFxuICAgICAgJ0hUTUwtQ1NTJzoge1xuICAgICAgICBhdmFpbGFibGVGb250czogW10sXG4gICAgICAgIHdlYkZvbnQ6ICdUZVgnLFxuICAgICAgICBpbWFnZUZvbnQ6IG51bGwgYXMgYW55LCAvLyBUT0RPOiBjb21wbGFpbiBvbiBEVFxuICAgICAgICB1bmRlZmluZWRGYW1pbHk6IHRoaXMubWF0aEpheENvbmZpZy51bmRlZmluZWRGYW1pbHkgYXMgYW55LCAvLyBUT0RPOiBjb21wbGFpbiBvbiBEVFxuICAgICAgICBtdGV4dEZvbnRJbmhlcml0OiB0cnVlLFxuICAgICAgfSxcbiAgICAgIG1lc3NhZ2VTdHlsZTogJ25vbmUnLFxuICAgICAgc2hvd01hdGhNZW51OiBmYWxzZSxcbiAgICAgIHNraXBTdGFydHVwVHlwZXNldDogdHJ1ZSxcbiAgICB9KVxuICAgIE1hdGhKYXguSHViLkNvbmZpZ3VyZWQoKVxuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGluamVjdFNjcmlwdChzY3JpcHRTcmM6IHN0cmluZykge1xuICBjb25zdCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuICBzY3JpcHQuc3JjID0gc2NyaXB0U3JjXG4gIHNjcmlwdC50eXBlID0gJ3RleHQvamF2YXNjcmlwdCdcbiAgZG9jdW1lbnQuaGVhZCEuYXBwZW5kQ2hpbGQoc2NyaXB0KVxuICByZXR1cm4gbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUpID0+IHtcbiAgICBzY3JpcHQuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHJlc29sdmUoKSlcbiAgfSlcbn1cbiJdfQ==","export function getMedia(document) {\n    return document.querySelectorAll('img[src],audio[src],video[src],link[href]');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC1jb21tb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC1jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLFFBQVEsQ0FBQyxRQUFzQjtJQUM3QyxPQUFPLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FDOUIsMkNBQTJDLENBRzVDLENBQUE7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldE1lZGlhKGRvY3VtZW50OiBIVE1MRG9jdW1lbnQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgJ2ltZ1tzcmNdLGF1ZGlvW3NyY10sdmlkZW9bc3JjXSxsaW5rW2hyZWZdJyxcbiAgKSBhcyBOb2RlTGlzdE9mPFxuICAgIEhUTUxJbWFnZUVsZW1lbnQgfCBIVE1MQXVkaW9FbGVtZW50IHwgSFRNTFZpZGVvRWxlbWVudCB8IEhUTUxMaW5rRWxlbWVudFxuICA+XG59XG4iXX0="],"names":["$parcel$global","globalThis","self","window","global","$cecc57bd705d34a3f46722639be3a1$var$_electron","_electron","async","oldDom","newDom","opts","idMap","WeakMap","diffMethod","time","idx","matchEls","newRoot","oldRoot","newEl","firstChild","oldEl","newCount","childNodes","length","oldCount","isEqual","nodeType","Node","ELEMENT_NODE","sidx","toString","set","nextSibling","runHeuristic","a","Array","from","allChildren","b","ncomp","$ffc091febcb582b621f5f704c33db6af$exports","diff","pairs","x","y","console","log","$c9e2da52b16bd8155d72173b7e42f$var$_morphdom","default","childrenOnly","onBeforeElUpdated","fromEl","toEl","isEqualNode","tcs","getMathContents","textContent","getNodeKey","node","get","e","error","innerHTML","renderLaTeX","mjController","queueTypeset","Object","defineProperty","value","range","doc","document","undefined","HAS_TEMPLATE_SUPPORT","createElement","HAS_RANGE_SUPPORT","createRange","toElement","str","trim","template","content","createFragmentFromTemplate","selectNode","body","createContextualFragment","createFragmentFromRange","fragment","createFragmentFromWrap","compareNodeNames","fromCodeStart","toCodeStart","fromNodeName","nodeName","toNodeName","charCodeAt","toUpperCase","syncBooleanAttrProp","name","setAttribute","removeAttribute","specialElHandlers","OPTION","parentNode","parentName","hasAttribute","selected","selectedIndex","INPUT","TEXTAREA","newValue","oldValue","nodeValue","placeholder","SELECT","optgroup","i","curChild","noop","defaultGetNodeKey","getAttribute","id","morphAttrs","morphdom","fromNode","toNode","attr","attrName","attrNamespaceURI","attrValue","toNodeAttrs","attributes","namespaceURI","localName","getAttributeNS","prefix","setAttributeNS","fromNodeAttrs","d","hasAttributeNS","removeAttributeNS","options","toNodeHtml","onBeforeNodeAdded","onNodeAdded","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","fromNodesLookup","create","keyedRemovalList","addKeyedRemoval","key","push","removeNode","skipKeyedNodes","removeChild","walkDiscardedChildNodes","handleNodeAdded","el","unmatchedFromEl","replaceChild","morphEl","toElKey","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","insertBefore","appendChild","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","createElementNS","len","elToRemove","$e730ac64d1f01aff290702b7ff3c8beb$exports","left","right","compare","match","slices","go","f","j","N","M","L","Z","Math","min","w","g","p","fill","h","r","c","o","m","k","max","s","t","z","D","u","v","slice","$a137d74b5d1f961e65402b2544f0d7a$exports","zip","slicesToItems","promise","catch","filePath","$a137d74b5d1f961e65402b2544f0d7a$var$_fs","existsSync","lstatSync","isFile","root","pathToToken","element","token","candidateElement","querySelectorAll","tag","item","index","ita","Symbol","iterator","itb","next","done","_fs","isElement","tagName","classList","contains","ascr","querySelector","bscr","type","isEqualMath","ac","bc","DOCUMENT_TYPE_NODE","publicId","systemId","checkDocumentType","every","getNamedItemNS","checkElement","ATTRIBUTE_NODE","checkAttr","PROCESSING_INSTRUCTION_NODE","target","data","checkProcInstr","TEXT_NODE","COMMENT_NODE","checkData","children","cb","start","performance","now","res","msvgh","getElementById","svgGlyphs","parentElement","outerHTML","MathJaxController","constructor","userMacros","mathJaxConfig","this","readyPromise","attachMathJax","[object Object]","controller","dispose","script","head","mjSrc","remove","jaxTeXConfig","extensions","texExtensions","Macros","equationNumbers","numberEquations","autoNumber","useLabelIds","domElement","allMath","unprocessedMath","filter","jax","MathJax","Hub","getJaxFor","needsUpdate","Promise","resolve","InputJax","TeX","Queue","temps","spans","setupTemps","cleanupTemps","span","temp","style","visibility","position","width","display","scriptElements","par","disp","previousElementSibling","cloneNode","add","includes","getComputedStyle","scriptSrc","src","addEventListener","injectScript","Config","latexRenderer","HTML-CSS","availableFonts","webFont","imageFont","undefinedFamily","mtextFontInherit","messageStyle","showMathMenu","skipStartupTypeset","Configured","require","$cecc57bd705d34a3f46722639be3a1$var$util","$cecc57bd705d34a3f46722639be3a1$var$_interopRequireWildcard","handlerId","nativePageScrollKeys","uncaughtError","err","ipcRenderer","send","message","stack","evt","reason","atomVars","mathJax","resFn","mkResPromise","sourceLineMap","Map","revSourceMap","scrollSync","firstLine","lastLine","scroll","top","slm","lines","keys","sort","lowix","findIndex","highix","low","high","norm","meanScroll","entries","line","weight","getBoundingClientRect","documentElement","scrollTop","clientHeight","updatePromise","nextUpdateParams","doUpdate","html","map","scrollSyncParams","preview","domDocument","DOMParser","parseFromString","hasChildNodes","container","headElement","visibleElements","innerHeight","bottom","$c9e2da52b16bd8155d72173b7e42f$exports","update","stillVisibleElements","offsetParent","lastEl","scrollBy","slsm","rsm","lineS","path","parseInt","elem","util","resolveElement","rsmel","request","result","$fae90f0a73bce816af5ed733fe$exports","processHTMLString","delayedUpdate","then","on","_evt","params","dataset","markdownPreviewPlusContext","context","setProperty","pdfExportOptions","val","_event","styles","styleElem","join","oldsrc","imgs","$e5233bf2e340b87217b858bda672f7a$exports","getMedia","img","ovs","ov","flash","scrollIntoViewIfNeeded","setTimeout","readyState","loaded","removeEventListener","baseElement","keyEventHandler","altKey","ctrlKey","shiftKey","metaKey","code","bubbles","cancelable","composed","detail","isComposing","location","repeat","preventDefault","lastContextMenuTarget","href","msg","errorDiv","event","deltaY","stopPropagation","height","visible","_line","_elem","bind","_","onbeforeunload","selection","getSelection","selectedText","selectedNode","anchorNode","startsWith","anchor","decodeURIComponent","scrollIntoView"],"version":3,"file":"main.js.map"}